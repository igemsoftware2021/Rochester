#We need impedance. Try to predict impedance based on how much the sheet is reduced and how big it is. 
#Based on D/G ratio, we get the specific surface area. From that, we can eliminate the surface area of oxygen groups
#(Ena)ONE PART: GRAPH made based on table from tuning paper (Table 1) from XPS data => we will know relation oxygen percentage and sp2 Carbons
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r}
carbon <- read.csv("C percentage.csv")
oxygen <- read.csv ("Oxygen concentration.csv")
```


```{r} 
carbon_saturation <- data.frame(carbon)
oxygen_saturation <- data.frame (oxygen)
```

Depending on concentration of reducing agent, what is percentage of C=C
```{r}
reduction_x <- carbon_saturation$X
reduction_y <- carbon_saturation$C.C

boxplot(reduction_y~reduction_x, main = "% Carbon concentration after reduction with HI",
     xlab ="[HI] reduction", ylab = "C=C %")

Depending on concentration of reducing agent, what is percentage of C=O?

```{r}
reduction_x1 <-  oxygen_saturation$X
reduction_y1 <- oxygen_saturation$C.O

boxplot(reduction_y1~reduction_x1, main = "% Oxygen concentration after reduction with HI",
        xlab ="[HI] reduction", ylab = "C=O %")
```

Depending on concentration of reducing agent, what is percentage of C-O-C
```{r}
reduction_x2 <-  oxygen_saturation$X
reduction_y2 <- oxygen_saturation$C.O.C

boxplot(reduction_y2~reduction_x2, main = "% Oxygen concentration after reduction with HI",
        xlab ="[HI] reduction", ylab = "C-O-C %")

```

Depending on concentration of reducing agent, what is percentage of water?

```{r}
reduction_x3 <-  oxygen_saturation$X
reduction_y3 <- oxygen_saturation$WATER

boxplot(reduction_y3~reduction_x3, main = "% Oxygen concentration after reduction with HI",
        xlab ="[HI] reduction", ylab = "Water %")
```

Depending on concentration of reducing agent, what is percentage of C sp3?

```{r}
reduction_x4 <- carbon_saturation$X
reduction_y4<- carbon_saturation$C.sp3

boxplot(reduction_y4~reduction_x4, main = "% Carbon concentration after reduction with HI",
        xlab ="[HI] reduction", ylab = "C sp3 %")
```

What is the percentage of C=C at specific C=O %?

```{r}
#given the same concentration of the reduction agent, what is % of C=C given C=O?
x <- oxygen_saturation$C.O
y<- carbon_saturation$C.C

plot(x, y, main = "C=O vs C=C",
     xlab = "%C=O", ylab = "%C=C",
     pch = 19, col= "blue", frame = FALSE)
abline(lm(y ~ x), col = "orange")
```

```{r}
cor(x,y)
```

What is the percentage of C=C at specific C-O-C %?
```{r}
x1 <- oxygen_saturation$C.O.C
y1<- carbon_saturation$C.C

plot(x1, y1, main = "C-O-C vs C=C",
     xlab = "% C-O-C", ylab = "% C=C",
     pch = 19, col= "blue", frame = FALSE)
abline(lm(y1 ~ x1), col = "orange")
```

What is the percentage of C=C at specific water %?

```{r}
x2 <- oxygen_saturation$WATER
y2<- carbon_saturation$C.C

plot(x2, y2, main = "water vs C=C",
     xlab = "% H2O", ylab = "%C=C",
     pch = 19, col= "blue", frame = FALSE)
abline(lm(y2 ~ x2), col = "orange")
```

#(Anca)second part: specific surface area predicted from D/G ratio =>overall surface area

#data from the BET SSA analysis of different graphene materials paper
getMeanFunctions()
df <- data.frame(x=c(0.843,0.911,0.984,0.991,0.996,1.016,1.023,1.025,1.071,1.264,1.281,2.937), y=c(25,70,300,300,315,310,485,500,575,680,680,685))
library(drc)
#creating the gompertz with lower limit at zero, 3 parameters model
fm <- drm(y ~ x, data = df, fct = LL.4())
#plotting the obtained fitting
plot(fm)
summary(fm)
#initial equation can be found in reduction Id/Ig ratios spreadsheet
#different code trying to improve the fit
#making separate numeric vectors for each data type (x - D/G ratio, y - SSA)
x <- c(0.843,0.911,0.984,0.991,0.996,1.016,1.023,1.025,1.071,1.264,1.281,2.937)
y <- c(25,70,300,300,315,310,485,500,575,680,680,685)
#testing the correlation and its p value
cor(x, y, method = c("pearson","kendall", "spearman"))
cor.test(x, y, method = c("pearson","kendall", "spearman"))
library(cgam)
plot(y~x)
#trying a different fitting model
fit <- nls(y ~ SSlogis(x, Asym, xmid, scal), data = data.frame(x, y))
summary(fit)
fitmodel <- nls(y ~ a/(1 + exp(-b * (x-c)) ) + d, start=list(a=1,b=.5,c=25))
sigmoid = function(params, x) {
  params[1] / (1 + exp(-params[2] * (x - params[3])))
}
#third part: remove surface area occupied by oxygen groups (look for bond lengths and how much space is taken) (OR JUST find area of sp2 carbons and oxygens)
In graphene sheet:  OH groups, COOH, and epoxide

```{r}
#lengths in Angstroms
OH_length = 0.964
C=O_in_carboxyl_lenght = 1.21
COH_in_carboxyl_length = 1.30
CO_in_epoxide_length = 1.47
equation for surface area
e =2.718
SSA(x) = -488.67 + 689.516*(e)^16.35(x-0.9758)

Prediction: Reduction of OH gives 1 sp2 carbon, COOH gives 2, and epoxide gives 2.

On sketch:GO seems to have: the carbon to oxygen ratio to be approximately three to one.
```{r}
#in nm
GO_layer <- 1.1
```

```{r}
#based on one sketch _ have 2 OH, 3 epoxy, and 9 carboxy
```
#fourth part: connect number/conc of aptamers to sheet size and percentage of sp2 carbons

